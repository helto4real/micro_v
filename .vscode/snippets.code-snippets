{
    "Ast-Node-Stmt": {
        "prefix": "ast-node-stmt",
        "body": [
            "module ast",
            "",
            "import lib.comp.token",
            "import lib.comp.util",
            "",
            "pub struct $1Stmt {",
            "pub:",
            "	// general ast node",
            "	kind        SyntaxKind = .$2_stmt",
            "	pos         util.Pos",
            "	child_nodes []AstNode",
            "	// child nodes",
            "}",
            "",
            "pub fn new_$2_stmt() $1Stmt {",
            "	return $1Stmt{",
            "		pos: util.new_pos_from_pos_bounds(key_for.pos, body_stmt.pos())",
            "		child_nodes: [AstNode(<insert>)]",
            "		// insert nodes here",
            "	}",
            "}",
            "pub fn (e &$1Stmt) child_nodes() []AstNode {",
            "	return e.child_nodes",
            "}",
            "pub fn (ex &$1Stmt) node_str() string {",
            "	return typeof(ex).name",
            "}",
        ],
        "description": ""
    },
    "Ast-Node-Expr": {
        "prefix": "ast-node-expr",
        "body": [
            "module ast",
            "",
            "import lib.comp.token",
            "import lib.comp.util",
            "",
            "pub struct $1Expr {",
            "pub:",
            "	// general ast node",
            "	kind        SyntaxKind = .$2_expr",
            "	pos         util.Pos",
            "	child_nodes []AstNode",
            "	// child nodes",
            "}",
            "",
            "pub fn new_$2_stmt() $1Expr {",
            "	return $1Expr{",
            "		pos: util.new_pos_from_pos_bounds(key_for.pos, body_stmt.pos())",
            "		child_nodes: [AstNode(<insert>)]",
            "		// insert nodes here",
            "	}",
            "}",
            "pub fn (ex &$1Expr) child_nodes() []AstNode {",
            "	return ex.child_nodes",
            "}",
            "pub fn (ex &$1Expr) node_str() string {",
            "	return typeof(ex).name",
            "}",
        ],
        "description": ""
    }
}